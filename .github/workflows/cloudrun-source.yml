name: Deploy to Cloud Run from Source
run-name: ${{ github.actor }} deploying Frontend Cloud Run service from Source ðŸš€

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select deployment environment.
        required: true
        default: staging
        options:
        - staging
        - production

jobs:
  set-env-var:
    name: Set Buildtime and Runtime Environment Variables
    runs-on: ubuntu-latest
    steps:
      - name: Setting ${{github.event.inputs.environment}} Environment # TODO: update Cloud Run service name
        id: env_type
        run: |
          if [ "${{ github.event.inputs.environment }}" = "staging" ] && [ "${{ github.ref }}" != "refs/heads/main" ] && [ "${{ github.ref }}" != "refs/heads/prod" ]; then
            echo "SERVICE=ribby-test" >> "$GITHUB_OUTPUT"
          elif [ "${{ github.event.inputs.environment }}" = "production" ] && [ "${{ github.ref }}" == "refs/heads/prod" ]; then
            echo "SERVICE=ribby" >> "$GITHUB_OUTPUT"
          else
            echo "This workflow should only be triggered on prod or a feature branch."
            exit 1
          fi
      - name: Show Environment type
        run: |
          echo "${{ github.event.inputs.environment }}"
          echo "deploying.... SERVICE=${{ steps.env_type.outputs.SERVICE }}"
    outputs:
      service: ${{ steps.env_type.outputs.SERVICE }}

  deploy:
    name: Deploy
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    needs: [set-env-var]
    env:
      PROJECT_ID: arched-logic-390516 # TODO: update Google Cloud project id
      REGION: us-central1 # TODO: update Cloud Run service region
      XATA_API_KEY: ${{ secrets.XATA_API_KEY }}
      SERVICE: ${{ needs.set-env-var.outputs.service }}
      ORIGIN: ${{ github.event.inputs.environment == 'staging' && secrets.ORIGIN_STAG || github.event.inputs.environment == 'production' && secrets.ORIGIN_PROD }}
      URL: ${{ github.event.inputs.environment == 'staging' && secrets.ORIGIN_STAG || github.event.inputs.environment == 'production' && secrets.ORIGIN_PROD }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Setting up Node'
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 'Installing dependencies'
        run: npm ci

      - name: 'Verifying the signatures'
        run: |-
          npm i -g npm@latest
          npm audit signatures

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT_EMAIL}}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      - name: Show Output of Google Auth
        run: |-
          echo ${{ steps.auth.outputs.access_token_expiration }}

      - name: Generate Dockerfile (Export Environment Variables)
        run: |-
          export XATA_API_KEY=${{ env.XATA_API_KEY }}
          export ORIGIN=${{ env.ORIGIN }}
          export URL=${{ env.URL }}
          export AUTH_SECRET=${{ secrets.AUTH_SECRET }}
          envsubst < ./template.Dockerfile > Dockerfile

      - name: Deploy to Cloud Run
        id: run-deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
        #   NOTE: If required, update to the appropriate source folder
          source: ./
          project_id: ${{ env.PROJECT_ID }}
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          no_traffic: true
          timeout: '400s'
          flags: '--allow-unauthenticated --min-instances=0 --cpu-throttling'
          # --cpu-boost
          # --max-instances=10
          # --ingress=internal-and-cloud-load-balancing
          # --port=8080
          # --cpu=1
          # --memory=512MiB
          # --concurrency=80
          # --execution-environment=gen2
          env_vars: |
            PUBLIC_BUILDER_API_KEY=${{ secrets.PUBLIC_BUILDER_API_KEY }}
            XATA_API_KEY=${{ env.XATA_API_KEY }}
            AUTH_SECRET=${{ secrets.AUTH_SECRET }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            ORIGIN=${{ env.ORIGIN }}
            URL=${{ env.URL}}
            PROTOCOL_HEADER=x-forwarded-proto
            HOST_HEADER=x-forwarded-host

      - name: Show Output Deployment Output
        run: |-
          echo ${{ env.ORIGIN }}
          echo ${{ env.URL }}
          echo "SHOW RESULTING URL"
          echo ${{ steps.run-deploy.outputs.url }}

      - name: Adjust Traffic
        id: traffic
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          revision_traffic: 'LATEST=100'